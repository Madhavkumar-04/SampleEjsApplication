<%- include('partials/header') %>
    <div class="container-fluid">
        <div class="row">
            <!-- Left navigation section -->
            <%- include('sections/left-section') %>

                <div class="col-md-9">
                    <!-- Subscribe Form -->
                    <div class="my-4">
                        <h2>Subscribe to Topic</h2>
                        <form id="subscribeForm" class="form-inline">
                            <div class="form-group mx-sm-3 mb-2">
                                <label for="subscribeTopic" class="sr-only">Topic</label>
                                <input type="text" class="form-control" id="subscribeTopic" placeholder="Enter topic"
                                    required>
                            </div>
                            <button type="submit" class="btn btn-primary mb-2">Subscribe</button>
                        </form>
                    </div>

                    <!-- Messages Table -->
                    <div class="my-4">
                        <h2>Messages</h2>
                        <table class="table table-striped" id="messagesTable">
                            <thead>
                                <tr>
                                    <th>Topic</th>
                                    <th>Message</th>
                                </tr>
                            </thead>
                            <tbody id="messagesBody"></tbody>
                        </table>
                    </div>
                </div>
        </div>
    </div>

    <%- include('partials/footer') %>
        <script>

            // Handle subscribe form submission
            document.getElementById('subscribeForm').addEventListener('submit', (e) => {
                e.preventDefault();
                const topic = document.getElementById('subscribeTopic').value;

                fetch('/subscribe', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ topic }), // Pass socketId for client-specific subscription
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 200) {
                            alert('Subscribed to topic successfully');
                        } else {
                            alert('Error subscribing to topic: ' + data.message);
                        }
                    });
            });

            // Listen for incoming MQTT messages via Socket.IO
            socket.on('mqttMessage', (data) => {
                const messageBody = document.getElementById('messagesBody');
                const row = document.createElement('tr');

                const topicCell = document.createElement('td');
                topicCell.textContent = data.topic;
                row.appendChild(topicCell);

                const messageCell = document.createElement('td');
                messageCell.textContent = data.message;
                row.appendChild(messageCell);

                messageBody.appendChild(row);
            });
        </script>